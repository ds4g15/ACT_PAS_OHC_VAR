This directory supplies the necessary scripts to run our adjoint experiments.

### TRAJECTORY:

The files
    namelist.TRAJ60
    namelist_ice.TRAJ60
are used to produce the trajectory (using nemo.exe) about which NEMOTAM is 
linearised. Note that for NEMO to see the files they should be copied to 
"namelist" and "namelist_ice" respectively

* The model should first be spun up (we spin up for 1000 years at 5475 outputs
per year such that the trajectory begins on timestep 5475001. This can be 
achieved by adapting the trajectory namelist to begin at step 0 and not produce
a trajectory (ln_trjhand=.false.)

* The trajectory can then be run using the provided namelists and user-generated
restart file.


### ADJOINT SIMULATIONS:
The files
    OHC_COST_FUNCTIONS.py
    ORCA2_subbasins.nc
    namelist.AD_TEMPLATE
are used to create a cost function [using python] and propagate it [using TAM].

* A cost fnction should first be produced using [OHC_COST_FUNCTION.py]
  Adjust parameters within script and run using python.

* The model can then be run (using nemo_tam.exe). For our experiments, every
cost function was propagated _three_ in three different adjoint runs:
     1.) 75     timesteps (5 day) length with TAM output every timestep
     2.) 5475   timesteps (1  y.) length with TAM output every 5 days
     3.) 328500 timesteps (60 y.) length with TAM output every year
This is because the metric is most sensitive to changes for short lags, so
numerical integration with large dt (the output frequency) will be highly
inaccurate. This is avoided by numerically integrating with increasing fineness
at decreasing lag, and nesting the integrals inside each other.

* To adjust the output frequency in the adjoint namelist, change the parameter
nn_ittrjfrq_tan

* To adjust the length that the adjoint is run for, use the parameter
nn_ittrjoffset to offset the "first" time step (in a forward sense). 
For instance, to run for just 1 year (5475 timesteps) from a 60 year 
(328500 timesteps) trajectory, set

nn_it000 = 323025
nn_itend = 328500
nn_ittrjoffset = 5475

and to set TAM output every 5 days, use
nn_ittrjfrq_tan = 75

* Adjust the parameter "cn_tam_input" to point NEMOTAM to the cost function
generated by OHC_COST_FUNCTIONS.py. The switch "ln_tl_passive_ocean" determines
if buoyancy feedbacks are active or not.

* After the runs are complete, join the split output using the rebuild_nemo tool
and concatenate along the time dimension (e.g. using ncrcat) to produce a single
output file per adjoint simulation. Following this scheme we obtained 126 output
files [3 depth levels x 2 modes (pas/act) x 7 basins x 3 run-length/output frqs]

################################################################################
